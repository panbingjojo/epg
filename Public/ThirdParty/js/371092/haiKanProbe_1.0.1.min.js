var haiKanProbe, mHaiKanProbe;
function doSendPlayData(e, r) {
    if (mHaiKanProbe)
        mHaiKanProbe.sendPositionToServer(e, r);
    else
        try {
            (mHaiKanProbe = new haiKanProbe).sendPositionToServer(e, r)
        } catch (e) {}
}
!function() {
    var defaultProbeSource = {
        getOperator: "",
        getServerURL: "http://123.232.102.3:8007/",
        getCTServerURL: "http://150.138.11.133:8007/",
        getCMServerURL: "http://120.192.66.24:8007/",
        getPlatformType: "",
        separator: "|",
        proBeType: {
            TYPE01: "01",
            TYPE02: "02",
            TYPE03: "03",
            TYPE04: "04",
            TYPE05: "05",
            TYPE06: "06",
            TYPE08: "08",
            TYPE10: "10",
            TYPE0S: "0S",
            TYPE16: "16",
            TYPE1: "1",
            TYPE2: "2",
            TYPE3: "3",
            TYPE4: "4",
            TYPE5: "5",
            TYPE6: "6",
            TYPE7: "7",
            TYPE8: "8",
            TYPE15: "15"
        },
        userInfo: {
            STBMODEL: "",
            STBMAC: "",
            STBIP: "",
            USERID: "",
            AREAID: "",
            GROUPID: "",
            TEMPLATE: "HD",
            STBID: "",
            currentPage: "",
            turnPage: null,
            turnPageName: null,
            turnPageId: null,
            clickId: null,
            reserve1: null,
            reserve2: null,
            from: null
        },
        getUserId: function() {
            return defaultProbeSource.separator + defaultProbeSource.getPlatformType + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.AREAID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC
        },
        starVGl: {
            EPGUrl: "",
            EEUrl: "",
            sign: "|",
            initDoFlag: !1,
            key: "OK",
            lastServiceFlag: "08",
            channel: {
                CHANNELID: "",
                CHANNELNAME: ""
            },
            lookbackinfo: {
                CHANNELID: "",
                STARTTIME: "",
                ENDTIME: "",
                DURATION: "",
                CHANNELNAME: "",
                PROGNAME: ""
            },
            vodinfo: {
                CPNAME: "",
                TYPENAME: "",
                VODNAME: "",
                VODCODE: "",
                ISSITCOM: "",
                TYPEID: "",
                ELAPSETIME: "",
                SITCOMNUM: "",
                SITCOMINDEX: "",
                DURATION: ""
            },
            infoUrl: {
                "02": "getContentInfo.jsp",
                "01": "getChannelInfo.jsp",
                "03": "getProgDetailInfo.jsp"
            }
        }
    }
        , haiKanDataFormat = {
        getMainFrameURL: function() {
            return window.location.href
        },
        getHistoryURL: function(e) {
            return document.referrer
        },
        getEPGURL: function(e) {
            return EPG.window.location.href
        },
        stringToJSON: function(e) {
            try {
                return e ? void probeEval("a=" + e + ";") : {}
            } catch (e) {
                return {}
            }
        },
        JSONToString: function(e) {
            switch (typeof e) {
                case "object":
                    var r = [];
                    if (e instanceof Array) {
                        for (var a = 0, o = e.length; a < o; a++)
                            r.push(haiKanDataFormat.JSONToString(e[a]));
                        return "[" + r.join(",\n") + "]"
                    }
                    if (e instanceof RegExp)
                        return e.toString();
                    for (var t in e)
                        r.push('"' + t + '":' + haiKanDataFormat.JSONToString(e[t]));
                    return "{" + r.join(",\n") + "}";
                case "function":
                    return "function() {}";
                case "number":
                    return e.toString();
                case "string":
                    return '"' + e + '"';
                case "boolean":
                default:
                    return e.toString()
            }
        },
        getParamsByName: function(e, r) {
            if (e && 0 < e.length) {
                for (var a = {}, o = e.split("&"), t = 0; t < o.length; t++)
                    a[o[t].split("=")[0]] = o[t].split("=")[1];
                return a[r]
            }
            return ""
        },
        getParams: function(e, r) {
            var a = "";
            if (-1 != e.indexOf("?")) {
                var o = e.split("?");
                if (1 <= o.length)
                    for (var t = 1; t < o.length; t++)
                        a = a || haiKanDataFormat.getParamsByName(o[t], r)
            }
            return a
        },
        clearCookie: function() {
            var e = document.cookie.match(/[^ =;]+(?=\=)/g);
            if (e)
                for (var r = e.length; r--; )
                    document.cookie = e[r] + "=0;expires=" + new Date(0).toUTCString()
        },
        setCookie: function(e, r, a) {
            var o;
            null != (e = e.replace(/[, =;]+/g, "")) && "" != e.trim() && null != r && (o = new Date,
                "[object Date]" != Object.prototype.toString.call(a) ? isNaN(a) || null == a ? o.setTime(o.getTime() + 31536e6) : o.setTime(o.getTime() + 1e3 * a) : o = a,
                document.cookie = e + "=" + escape(r) + ";expires=" + o.toGMTString())
        },
        getCookie: function(e) {
            if (null != e && "" != e.trim()) {
                var r = new RegExp(e + "=([^;]*)","im")
                    , a = document.cookie.match(r);
                if (null != a && "" != a)
                    return unescape(a[1])
            }
            return ""
        },
        getFilterFlag: function() {
            for (var e = !0, r = ["myplay.jsp", "channel_contral_back.html", "vodSeek.html", "seek_bar.jsp", "play_controlVod.jsp", "play_ControlChannel.jsp", "play_controlTVod.jsp"], a = -1 != haiKanDataFormat.getMainFrameURL().indexOf("?") ? haiKanDataFormat.getMainFrameURL().split("?")[0] : haiKanDataFormat.getMainFrameURL(), o = 0, t = r.length; o < t; o++)
                if (-1 != a.indexOf(r[o])) {
                    e = !1;
                    break
                }
            return e
        },
        getNeedSend: function(e) {
            return !0
        },
        getOrderCByName: function(e) {
            var r = {
                CONTENTTYPE: "",
                EXPIRATIONTIME: ""
            };
            return -1 != (e = decodeURIComponent(e)).indexOf("单点") ? (r.CONTENTTYPE = "0",
                r.EXPIRATIONTIME = haiKanDataFormat.getDateTimeStr2(3)) : -1 != e.indexOf("季包") ? (r.CONTENTTYPE = "2",
                r.EXPIRATIONTIME = haiKanDataFormat.getDateTimeStr1(3)) : -1 != e.indexOf("年包") ? (r.CONTENTTYPE = "3",
                r.EXPIRATIONTIME = haiKanDataFormat.getDateTimeStr1(12)) : (r.CONTENTTYPE = "1",
                r.EXPIRATIONTIME = "9999-12-31 23:59:59"),
                r
        },
        MachCharacter: function(e) {
            var r = e ? e.match(/^[a-z|A-Z]+/gi) + "" : "";
            return r || e
        },
        getTime: function() {
            var e = new Date
                , r = e.getHours().toString()
                , a = e.getMinutes().toString()
                , o = e.getSeconds().toString();
            return 1 == r.length && (r = "0" + r),
            1 == a.length && (a = "0" + a),
            1 == o.length && (o = "0" + o),
            r + a + o
        },
        getDate: function() {
            var e = new Date
                , r = e.getFullYear().toString()
                , a = (e.getMonth() + 1).toString()
                , o = e.getDate().toString();
            return 1 == a.length ? a = "0" + a : 0 == a.length && (a = ""),
                1 == o.length ? o = "0" + o : 0 == o.length && (o = ""),
                dis_date = r + a + o,
                dis_date
        },
        getDateTime: function() {
            return haiKanDataFormat.getDate() + haiKanDataFormat.getTime()
        },
        getDateStr: function(e) {
            var r = new Date;
            r.setMonth(r.getMonth() + e - 1);
            var a = r.getMonth()
                , o = ++a
                , t = new Date(r.getFullYear(),o,1);
            d = new Date(t - 864e5).getDate().toString();
            var u = t.getFullYear().toString()
                , n = (t.getMonth() + 1).toString();
            return n < 10 && (n = "0" + n),
            d < 10 && (d = "0" + d),
            u + n + d
        },
        getDayStr: function(e) {
            var r = new Date;
            r.setDate(r.getDate() + e);
            var a = r.getDate().toString()
                , o = r.getFullYear().toString()
                , t = (r.getMonth() + 1).toString();
            return t < 10 && (t = "0" + t),
            a < 10 && (a = "0" + a),
            o + t + a
        },
        getDateTimeStr1: function(e) {
            return haiKanDataFormat.getDateStr(e) + "235959"
        },
        getDateTimeStr2: function(e) {
            return haiKanDataFormat.getDayStr(e) + "235959"
        }
    };
    window.hasOwnProperty("hkiptv") ? "CMh" === window.hkiptv.getOperator() || "CMz" === window.hkiptv.getOperator() ? (defaultProbeSource.getOperator = "CM",
        defaultProbeSource.getServerURL = defaultProbeSource.getCMServerURL,
        defaultProbeSource.getPlatformType = "",
        defaultProbeSource.userInfo.STBMAC = window.hkiptv.getMac(),
        defaultProbeSource.userInfo.USERID = window.hkiptv.getUserid()) : "CT" === window.hkiptv.getOperator() && (defaultProbeSource.getOperator = "CT",
        defaultProbeSource.getServerURL = defaultProbeSource.getCTServerURL,
        defaultProbeSource.getPlatformType = "",
        defaultProbeSource.userInfo.STBMAC = window.hkiptv.getMac(),
        defaultProbeSource.userInfo.USERID = window.hkiptv.getUserid()) : "jz3.0" === Authentication.CTCGetConfig("HKEpgVer") || "jz3.0" === Utility.getValueByName("HKEpgVer") ? (defaultProbeSource.getOperator = "CT",
        defaultProbeSource.getServerURL = defaultProbeSource.getCTServerURL,
        defaultProbeSource.getPlatformType = "CTjz3.0",
        defaultProbeSource.userInfo.STBMAC = Utility.getValueByName("MACAddress") || Authentication.CTCGetConfig("MACAddress") || Authentication.CTCGetConfig("System.MACAddress"),
        defaultProbeSource.userInfo.USERID = Utility.getValueByName("ntvuseraccount") || Authentication.CTCGetConfig("UserID"),
        defaultProbeSource.userInfo.AREAID = Utility.getValueByName("areaid") || Authentication.CTCGetConfig("areaid")) : (defaultProbeSource.getOperator = "LT",
        defaultProbeSource.getServerURL = defaultProbeSource.getServerURL,
        defaultProbeSource.getPlatformType = "zx" == Authentication.CTCGetConfig("vodproviderid_bt") ? "ZTE" : "HW",
        defaultProbeSource.userInfo.STBMODEL = Authentication.CTCGetConfig("STBType") ? Authentication.CTCGetConfig("STBType") : "B700V2A",
        defaultProbeSource.userInfo.STBMAC = Authentication.CTCGetConfig("mac_bt"),
        defaultProbeSource.userInfo.STBIP = Authentication.CTCGetConfig("ip_bt"),
        defaultProbeSource.userInfo.USERID = Authentication.CTCGetConfig("UserID"),
        defaultProbeSource.userInfo.AREAID = Authentication.CTCGetConfig("userAreaId"),
        defaultProbeSource.userInfo.GROUPID = Authentication.CTCGetConfig("GROUPID") ? Authentication.CTCGetConfig("GROUPID") : "",
        defaultProbeSource.userInfo.TEMPLATE = Authentication.CTCGetConfig("TEMPLATE") ? Authentication.CTCGetConfig("TEMPLATE") : "HD",
        defaultProbeSource.userInfo.STBID = Authentication.CTCGetConfig("sn_bt"));
    var probeProductInfo = {
        getUserIDInfo: function() {
            return defaultProbeSource.getUserId()
        },
        getSTBInfo: function() {
            return probeProductInfo.modelToBrand(defaultProbeSource.userInfo.STBMODEL) + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMODEL + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + defaultProbeSource.userInfo.STBIP + defaultProbeSource.separator + defaultProbeSource.userInfo.STBID + defaultProbeSource.separator + defaultProbeSource.userInfo.AREAID + defaultProbeSource.separator + defaultProbeSource.userInfo.GROUPID + defaultProbeSource.separator + (-1 != defaultProbeSource.userInfo.TEMPLATE.indexOf("HD") ? "HD" : "SD")
        },
        setSTBInfo: function(e) {
            var r = defaultProbeSource.userInfo.STBMODEL;
            defaultProbeSource.userInfo.STBMODEL = r,
                defaultProbeSource.userInfo.STBMAC = e.STBMAC,
                defaultProbeSource.userInfo.STBIP = e.STBIP,
                defaultProbeSource.userInfo.STBID = e.STBID,
                defaultProbeSource.userInfo.USERID = e.USERID,
                defaultProbeSource.userInfo.AREAID = e.AREAID,
                defaultProbeSource.userInfo.GROUPID = e.GROUPID,
                defaultProbeSource.userInfo.TEMPLATE = e.TEMPLATE,
                haiKanDataFormat.setCookie("STARV_STBMODEL", r),
                haiKanDataFormat.setCookie("STARV_STBMAC", e.STBMAC),
                haiKanDataFormat.setCookie("STARV_STBIP", e.STBIP),
                haiKanDataFormat.setCookie("STARV_STBID", e.STBID),
                haiKanDataFormat.setCookie("STARV_USERID", e.USERID),
                haiKanDataFormat.setCookie("STARV_AREAID", e.AREAID),
                haiKanDataFormat.setCookie("STARV_GROUPID", e.GROUPID),
                haiKanDataFormat.setCookie("STARV_TEMPLATE", e.TEMPLATE)
        },
        modelToBrand: function(e) {
            return -1 != e.indexOf("EC") ? starv_platform : -1 != e.indexOf("ITV") || -1 != e.indexOf("IHO") ? "CQ" : -1 != e.indexOf("HG") ? "DH" : "ZTE"
        },
        serviceType: "",
        typeUrl: ""
    }
        , probeAssembleData = {
        getData: function(e, r, a) {
            var o = ""
                , t = haiKanDataFormat.getMainFrameURL();
            try {
                switch (e) {
                    case "00":
                        o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + defaultProbeSource.starVGl.lastServiceFlag,
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "01":
                        defaultProbeSource.starVGl.lastServiceFlag = "01",
                            o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + r.CHANNELID + defaultProbeSource.separator + r.CHANNELNAME + defaultProbeSource.separator + r.key,
                            o += defaultProbeSource.separator + document.title,
                            o += defaultProbeSource.separator + Authentication.CTCGetConfig("ip_bt"),
                            o += defaultProbeSource.separator + "LT",
                            defaultProbeSource.lastServiceFlag = "01";
                        break;
                    case "02":
                        defaultProbeSource.starVGl.lastServiceFlag = "02";
                        var u = r.TYPENAME;
                        -1 != u.indexOf("|") && (u = u.replace(/\|/g, ",")),
                            o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + ("undefined" == r.CPNAME ? "MAS" : r.CPNAME) + defaultProbeSource.separator + r.TYPEID + defaultProbeSource.separator + u + defaultProbeSource.separator + r.VODCODE + defaultProbeSource.separator + r.VODNAME + defaultProbeSource.separator + (r.SITCOMINDEX ? r.SITCOMINDEX : 0) + defaultProbeSource.separator + (r.SITCOMNUM ? r.SITCOMNUM : 0) + defaultProbeSource.separator + r.DURATION + defaultProbeSource.separator + r.CURRTIME + defaultProbeSource.separator + r.STATUS + defaultProbeSource.separator + r.SPEED + "X",
                            o += defaultProbeSource.separator + document.title,
                            o += defaultProbeSource.separator + "LT",
                            defaultProbeSource.starVGl.lastServiceFlag = "02";
                        break;
                    case "03":
                        defaultProbeSource.starVGl.lastServiceFlag = "03",
                            o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + r.CHANNELID + defaultProbeSource.separator + r.PROGID + defaultProbeSource.separator + r.STARTTIME + defaultProbeSource.separator + r.ENDTIME + defaultProbeSource.separator + (r.DURATION && r.DURATION,
                                r.DURATION) + defaultProbeSource.separator + r.STATUS + defaultProbeSource.separator + r.key + defaultProbeSource.separator + r.SPEED + "X" + defaultProbeSource.separator + (r.CURRTIME ? r.CURRTIME : 0) + defaultProbeSource.separator + r.CHANNELNAME + defaultProbeSource.separator + r.PROGNAME,
                            o += defaultProbeSource.separator + document.title,
                            o += defaultProbeSource.separator + "LT",
                            defaultProbeSource.starVGl.lastServiceFlag = "03";
                        break;
                    case "04":
                        defaultProbeSource.starVGl.lastServiceFlag = "04",
                            o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + ("" == r.CHANNELID ? haiKanDataFormat.getCookie("STARV_TIMESHFTCID") : r.CHANNELID) + defaultProbeSource.separator + ("" == r.CHANNELNAME ? haiKanDataFormat.getCookie("STARV_TIMESHFTCNAME") : r.CHANNELNAME) + defaultProbeSource.separator + r.STATUS + defaultProbeSource.separator + r.CURRTIME + defaultProbeSource.separator + r.SPEED + "X",
                            o += defaultProbeSource.separator + document.title,
                            o += defaultProbeSource.separator + "LT",
                            defaultProbeSource.starVGl.lastServiceFlag = "04";
                        break;
                    case "05":
                        o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + haiKanDataFormat.getOrderCByName(r.PRODUCTNAME).CONTENTTYPE + defaultProbeSource.separator + r.PRODUCTID + defaultProbeSource.separator + decodeURIComponent(r.PRODUCTNAME) + defaultProbeSource.separator + haiKanDataFormat.MachCharacter(r.ASSERTID) + defaultProbeSource.separator + r.PRICE + defaultProbeSource.separator + haiKanDataFormat.getOrderCByName(r.PRODUCTNAME).EXPIRATIONTIME + defaultProbeSource.separator + r.ORDERACTION + defaultProbeSource.separator + r.ORDERSTATUS + defaultProbeSource.separator + r.FAILDES + defaultProbeSource.separator + decodeURIComponent(t.replace(/\|/g, "#")) + defaultProbeSource.separator + r.FLAG + defaultProbeSource.separator + document.title + defaultProbeSource.separator + r.ASSERTID + defaultProbeSource.separator + decodeURIComponent(r.ASSERTNAME) + defaultProbeSource.separator + r.CLOUMNID,
                            o += defaultProbeSource.separator + "LT",
                            o += defaultProbeSource.separator + r.PAGESOURCE;
                        break;
                    case "06":
                        t.split("?")[1];
                        var n = r.NAME
                            , o = (r.URL,
                        e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime());
                        o += defaultProbeSource.separator + appCode + defaultProbeSource.separator + n,
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "08":
                        o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime();
                        var c, l = haiKanDataFormat.getParams(t, "foucsid"), f = -1, s = haiKanDataFormat.getParams(t, "currPage") ? haiKanDataFormat.getParams(t, "currPage") : -1, d = haiKanDataFormat.getParams(t, "categotyName") ? haiKanDataFormat.getParams(t, "categotyName") : -1;
                        l && -1 != l.indexOf("_") && (f = l.split("_")[1]),
                            r.flag ? (c = !!haiKanDataFormat.getParams(t, "recommCollectId") && haiKanDataFormat.getParams(t, "recommCollectId"),
                                o += defaultProbeSource.separator + t.replace(/\|/g, "#") + defaultProbeSource.separator + haiKanDataFormat.getHistoryURL().replace(/\|/g, "#") + defaultProbeSource.separator + c) : o += defaultProbeSource.separator + (r ? r.url : "") + defaultProbeSource.separator + t.replace(/\|/g, "#") + defaultProbeSource.separator + (!!r.recommCollectId && r.recommCollectId),
                            o += defaultProbeSource.separator + document.title,
                            o += defaultProbeSource.separator + d,
                            o += defaultProbeSource.separator + s,
                            o += defaultProbeSource.separator + f,
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "09":
                        o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime() + defaultProbeSource.separator + probeProductInfo.getSTBInfo(),
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "10":
                        o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + r.FAVTYPE,
                            o += defaultProbeSource.separator + r.PROID,
                            o += defaultProbeSource.separator + r.PRONAME,
                            o += defaultProbeSource.separator + r.COLUMNID,
                            o += defaultProbeSource.separator + r.ACTIONTYPE,
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "0E":
                        o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + r.media_code + defaultProbeSource.separator + (r.error_message ? r.error_message : r.error_code) + defaultProbeSource.separator + document.title,
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "0D":
                        o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + r,
                            o += defaultProbeSource.separator + document.title,
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "t":
                        o = "T" + defaultProbeSource.separator + haiKanDataFormat.getMainFrameURL(),
                            o += defaultProbeSource.separator + document.title,
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "0S":
                        o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + r.value,
                            o += defaultProbeSource.separator + document.title,
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "0O":
                        o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + r,
                            o += defaultProbeSource.separator + document.title,
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "16":
                        o = e + probeProductInfo.getUserIDInfo() + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            o += defaultProbeSource.separator + r.appid,
                            o += defaultProbeSource.separator + r.customerId,
                            o += defaultProbeSource.separator + r.recommCollectId,
                            o += defaultProbeSource.separator + r.type,
                            o += defaultProbeSource.separator + "LT";
                        break;
                    case "1":
                        o = e + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "" : o += defaultProbeSource.separator + "48f72c3638511a432fb8b54a13338511",
                            o += defaultProbeSource.separator + r.OperatorID,
                            o += defaultProbeSource.separator + r.TerraceID,
                            o += defaultProbeSource.separator + r.ContentID,
                            o += defaultProbeSource.separator + r.Brand,
                            o += defaultProbeSource.separator + r.Mode,
                            o += defaultProbeSource.separator + r.ApkVersion,
                            o += defaultProbeSource.separator + r.ReserveGroup,
                            o += defaultProbeSource.separator + r.reserve2,
                            o += defaultProbeSource.separator + r.from;
                        break;
                    case "2":
                        o = e + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "" : o += defaultProbeSource.separator + "48f72c3638511a432fb8b54a13338511",
                            o += defaultProbeSource.separator + r.ChannelID,
                            o += defaultProbeSource.separator + r.ChannelName,
                            o += defaultProbeSource.separator + r.EnterChannelType,
                            o += defaultProbeSource.separator + r.ChannelStatus,
                            o += defaultProbeSource.separator + r.reserve1,
                            o += defaultProbeSource.separator + r.reserve2,
                            o += defaultProbeSource.separator + r.from;
                        break;
                    case "3":
                        o = e + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "" : o += defaultProbeSource.separator + "48f72c3638511a432fb8b54a13338511",
                            o += defaultProbeSource.separator + r.ColumnID,
                            o += defaultProbeSource.separator + r.ColumnName,
                            o += defaultProbeSource.separator + r.VODCODE,
                            o += defaultProbeSource.separator + r.VODNAME,
                            o += defaultProbeSource.separator + r.Episodes,
                            o += defaultProbeSource.separator + r.VodEpisodes,
                            o += defaultProbeSource.separator + r.VodOperateType,
                            o += defaultProbeSource.separator + r.Pace,
                            o += defaultProbeSource.separator + r.EnterType,
                            o += defaultProbeSource.separator + r.StartTime,
                            o += defaultProbeSource.separator + r.reserve1,
                            o += defaultProbeSource.separator + r.reserve2,
                            o += defaultProbeSource.separator + r.from;
                        break;
                    case "4":
                        o = e + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "" : o += defaultProbeSource.separator + "48f72c3638511a432fb8b54a13338511",
                            o += defaultProbeSource.separator + r.ChannelID,
                            o += defaultProbeSource.separator + r.ProgramChannelName,
                            o += defaultProbeSource.separator + r.AsssetID,
                            o += defaultProbeSource.separator + r.ProgramName,
                            o += defaultProbeSource.separator + r.ProgramDuration,
                            o += defaultProbeSource.separator + r.ProgramOperateType,
                            o += defaultProbeSource.separator + r.Pace,
                            o += defaultProbeSource.separator + r.EnterChannelType,
                            o += defaultProbeSource.separator + r.StartTime,
                            o += defaultProbeSource.separator + r.reserve1,
                            o += defaultProbeSource.separator + r.reserve2,
                            o += defaultProbeSource.separator + r.from;
                        break;
                    case "5":
                        o = e + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "" : o += defaultProbeSource.separator + "48f72c3638511a432fb8b54a13338511",
                            o += defaultProbeSource.separator + r.ChannelID,
                            o += defaultProbeSource.separator + r.ChannelName,
                            o += defaultProbeSource.separator + r.ProgramOperateType,
                            o += defaultProbeSource.separator + r.Pace,
                            o += defaultProbeSource.separator + r.StartTime,
                            o += defaultProbeSource.separator + r.reserve1,
                            o += defaultProbeSource.separator + r.reserve2,
                            o += defaultProbeSource.separator + r.from;
                        break;
                    case "6":
                        o = e + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "" : o += defaultProbeSource.separator + "48f72c3638511a432fb8b54a13338511",
                            probeValueEmpty(r.currentPage) ? o += defaultProbeSource.separator + haiKanDataFormat.getHistoryURL().replace(/\|/g, "#") : o += defaultProbeSource.separator + r.currentPage,
                            probeValueEmpty(r.turnPage) ? o += defaultProbeSource.separator + t.replace(/\|/g, "#") : o += defaultProbeSource.separator + r.turnPage,
                            probeValueEmpty(r.turnPageName) ? o += defaultProbeSource.separator + document.title : o += defaultProbeSource.separator + r.turnPageName,
                            o += defaultProbeSource.separator + (r.turnPageId ? r.turnPageId : ""),
                            o += defaultProbeSource.separator + (r.clickId ? r.clickId : "0"),
                            o += defaultProbeSource.separator + (r.reserve1 ? r.reserve1 : null),
                            o += defaultProbeSource.separator + (r.reserve2 ? r.reserve2 : null),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "jz3.0" : o += defaultProbeSource.separator + (r.from ? r.from : null);
                        break;
                    case "7":
                        o = e + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "" : o += defaultProbeSource.separator + "48f72c3638511a432fb8b54a13338511",
                            o += defaultProbeSource.separator + r.ProductType,
                            o += defaultProbeSource.separator + r.ProductID,
                            o += defaultProbeSource.separator + r.ProductName,
                            o += defaultProbeSource.separator + r.OperatorID,
                            o += defaultProbeSource.separator + r.EndTime,
                            o += defaultProbeSource.separator + r.Action,
                            o += defaultProbeSource.separator + r.OrderStatus,
                            o += defaultProbeSource.separator + r.Fail,
                            o += defaultProbeSource.separator + r.OrderUrl,
                            o += defaultProbeSource.separator + r.Confirmation,
                            o += defaultProbeSource.separator + r.UrlName,
                            o += defaultProbeSource.separator + r.reserve1,
                            o += defaultProbeSource.separator + r.reserve2,
                            o += defaultProbeSource.separator + r.from;
                        break;
                    case "8":
                        o = e + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "" : o += defaultProbeSource.separator + "48f72c3638511a432fb8b54a13338511",
                            o += defaultProbeSource.separator + r.VODCODE,
                            o += defaultProbeSource.separator + r.VODNAME,
                            o += defaultProbeSource.separator + r.mediastatus,
                            o += defaultProbeSource.separator + r.reserve1,
                            o += defaultProbeSource.separator + r.reserve2,
                            o += defaultProbeSource.separator + r.from;
                        break;
                    case "15":
                        o = e + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "" : o += defaultProbeSource.separator + "48f72c3638511a432fb8b54a13338511",
                            o += defaultProbeSource.separator + r.key,
                            o += defaultProbeSource.separator + r.from;
                        break;
                    case "255":
                        o = e + defaultProbeSource.separator + defaultProbeSource.userInfo.USERID + defaultProbeSource.separator + defaultProbeSource.userInfo.STBMAC + defaultProbeSource.separator + haiKanDataFormat.getDateTime(),
                            "CTjz3.0" === defaultProbeSource.getPlatformType ? o += defaultProbeSource.separator + "" : o += defaultProbeSource.separator + "48f72c3638511a432fb8b54a13338511",
                            o += defaultProbeSource.separator + "H",
                            o += defaultProbeSource.separator + ++defaultProbeSource.starVGl.lastServiceFlag,
                            o += defaultProbeSource.separator + "jz3.0"
                }
            } catch (e) {
                startPostSend(defaultProbeSource.getServerURL, "0e", "geterr")
            }
            return o
        },
        sendDataPost: function(e, r) {
            !r || -1 != r.indexOf("|") && "NO" == r.split("|")[2] || haiKanDataFormat.getNeedSend(r.split("|")[2]) && probeAjaxRequest(e, {
                type: "POST",
                dataType: "html",
                data: r,
                timeout: 3e3,
                requestSuccess: function(e) {},
                requestFail: function(e) {}
            })
        },
        sendDataGet: function(url, t, pageInfo) {
            var getInfoUrl = "";
            if (!url)
                return 0;
            var param = ""
                , hURL = haiKanDataFormat.getHistoryURL();
            "02" == t ? pageInfo && pageInfo.PROGID && pageInfo.TYPEID ? (param = "code=" + pageInfo.PROGID,
                param += "&columnId=" + pageInfo.TYPEID) : (param = "code=" + (haiKanDataFormat.getParams(hURL, "programcode") ? haiKanDataFormat.getParams(hURL, "programcode") : haiKanDataFormat.getParams(hURL, "programid")),
                param += "&columnId=" + (haiKanDataFormat.getParams(hURL, "columncode") ? haiKanDataFormat.getParams(hURL, "columncode") : haiKanDataFormat.getParams(hURL, "columnId") ? haiKanDataFormat.getParams(hURL, "columnId") : "")) : "01" == t ? param = "CHANNELID=" + pageInfo.CHANNELID : "03" == t && (param = "progId=" + pageInfo.PROGID),
            -1 == param.indexOf("undefined") && (-1 != haiKanDataFormat.EPGUrl.indexOf("http://") && (defaultProbeSource.starVGl.EEUrl = defaultProbeSource.starVGl.EPGUrl),
                getInfoUrl = defaultProbeSource.starVGl.EEUrl + url,
            -1 != getInfoUrl.indexOf("http://") && probeAjaxRequest(getInfoUrl, {
                type: "GET",
                dataType: "html",
                data: param,
                timeout: "stbInfo" == t ? 15e3 : 5e3,
                requestSuccess: function(html) {
                    var APIInfo = {}
                        , APIInfo = "{}" == html ? {} : eval("(" + html + ")");
                    "09" == t || "stbInfo" == t ? (defaultProbeSource.userInfo = APIInfo,
                    haiKanDataFormat.getCookie("STARV_USERID") || haiKanDataFormat.getFilterFlag() && startPostSend(defaultProbeSource.getServerURL, "08", {
                        flag: !0
                    }),
                        probeProductInfo.setSTBInfo(APIInfo)) : "01" == t ? (defaultProbeSource.starVGl.channel.CHANNELID = APIInfo.CHANNELID,
                        defaultProbeSource.starVGl.channel.CHANNELNAME = APIInfo.CHANNELNAME,
                        haiKanDataFormat.setCookie("STARV_TIMESHFTCID", APIInfo.CHANNELID),
                        haiKanDataFormat.setCookie("STARV_TIMESHFTCNAME", APIInfo.CHANNELNAME)) : "02" == t ? (defaultProbeSource.starVGl.vodinfo.CPNAME = APIInfo.CPNAME,
                        defaultProbeSource.starVGl.vodinfo.VODNAME = APIInfo.VODNAME,
                        defaultProbeSource.starVGl.vodinfo.VODCODE = APIInfo.VODCODE,
                        defaultProbeSource.starVGl.vodinfo.TYPENAME = APIInfo.TYPENAME,
                        defaultProbeSource.starVGl.vodinfo.SITCOMINDEX = APIInfo.SITCOMINDEX,
                        defaultProbeSource.starVGl.vodinfo.SITCOMNUM = APIInfo.SITCOMNUM,
                        defaultProbeSource.starVGl.vodinfo.TYPEID = APIInfo.TYPEID,
                        defaultProbeSource.starVGl.vodinfo.DURATION = APIInfo.ELAPSETIME) : "03" == t && (defaultProbeSource.starVGl.lookbackinfo.CHANNELID = APIInfo.CHANNELID,
                        defaultProbeSource.starVGl.lookbackinfo.STARTTIME = APIInfo.PROGSTARTTIME,
                        defaultProbeSource.starVGl.lookbackinfo.ENDTIME = APIInfo.PROGENDTIME,
                        defaultProbeSource.starVGl.lookbackinfo.DURATION = APIInfo.DURATION,
                        defaultProbeSource.starVGl.lookbackinfo.CHANNELNAME = APIInfo.CHANNELNAME,
                        defaultProbeSource.starVGl.lookbackinfo.PROGNAME = APIInfo.PROGNAME),
                    "stbInfo" != t && startPostSend(defaultProbeSource.getServerURL, t, pageInfo, APIInfo)
                },
                requestFail: function(e) {}
            }))
        }
    }
        , startPostSend = function(e, r, a, o) {
        probeProductInfo.serviceType = r,
            probeProductInfo.typeUrl = e,
            probeAssembleData.sendDataPost(probeProductInfo.typeUrl, probeAssembleData.getData(probeProductInfo.serviceType, a, o))
    };
    function probeAjax(e) {
        (e = e || {}).method = e.method.toUpperCase() || "POST",
            e.url = e.url || "",
            e.async = e.async || !0,
            e.data = e.data || null,
            e.success = e.success || function() {}
            ,
            e.error = e.error || function() {}
            ,
            e.dataType = e.dataType;
        var r = null;
        if (XMLHttpRequest && (r = new XMLHttpRequest),
        "POST" === e.method.toUpperCase()) {
            var a = e.data.message;
            r.open(e.method, e.url, e.async),
                r.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=utf-8"),
                r.send(a)
        } else if ("GET" === e.method.toUpperCase()) {
            var o = [];
            for (var t in e.data)
                o.push(t + "=" + e.data[t]);
            "" === (a = o.join("&")) ? r.open(e.method, e.url, e.async) : r.open(e.method, e.url + "?" + a, e.async),
                r.send(null)
        }
        r.onreadystatechange = function() {
            4 === r.readyState && (200 === r.status ? e.success(r.responseText) : e.error(r.status))
        }
    }
    function probeValueEmpty(e) {
        switch (typeof e) {
            case "number":
                if (isNaN(e))
                    return 1;
                break;
            case "string":
                if ("" === e || "[]" === e || "{}" === e || "NaN" === e || "undefined" === e)
                    return 1;
                break;
            case "boolean":
                return;
            case "undefined":
                return 1;
            case "object":
                if (null === e)
                    return 1;
                if (e instanceof Array && 0 === e.length)
                    return 1;
                if (e instanceof Object && "{}" === JSON.stringify(e))
                    return 1
        }
    }
    function probeEval(e) {
        return new Function("return " + e)()
    }
    function probeAjaxRequest(e, r) {
        var o, t, u, n, c, l, f, s, a, d = arguments;
        0 != d.length && (u = !(t = o = void 0),
            n = "application/x-www-form-urlencoded",
            l = c = void 0,
            f = 1e4,
            s = "GET",
            a = function(e) {
                if (o = e.url ? e.url : o,
                e.data && "[object Object]" == Object.prototype.toString.call(e.data)) {
                    var r = "";
                    for (var a in e.data)
                        r = r + a + "=" + e.data[a] + "&";
                    t = r.substr(0, r.length - 1)
                } else
                    e.data && "[object String]" == Object.prototype.toString.call(e.data) && (t = e.data);
                u = null != e.async ? !!e.async : u,
                "[object Function]" == Object.prototype.toString.call(e.complete) && probeEval(e.complete),
                    n = e.contentType ? e.contentType : n,
                    c = e.context ? e.context : c,
                    l = e.dataType ? e.dataType : l,
                "[object Function]" == Object.prototype.toString.call(e.success) && probeEval(e.success),
                "[object Function]" == Object.prototype.toString.call(e.error) && probeEval(e.error),
                    f = e.timeout ? e.timeout : f,
                    s = null != e.type && "post" == e.type.toLowerCase() ? "POST" : s
            }
            ,
            1 == d.length && "[object String]" == Object.prototype.toString.call(e) ? o = e : 1 == d.length && "[object Object]" == Object.prototype.toString.call(e) ? a(e) : 2 == d.length && "[object String]" == Object.prototype.toString.call(e) && "[object Function]" == Object.prototype.toString.call(r) ? o = e : (a(r),
                o = e),
        o && ("get" == s.toLowerCase() && null != t && (o = -1 == o.indexOf("?") ? o + "?" + t : o + "&" + t),
            probeAjax({
                method: s,
                url: o,
                data: {
                    message: t
                },
                success: function(e) {
                    r.requestSuccess(e)
                },
                error: function(e) {
                    r.requestFail(e)
                }
            })))
    }
    function haiKanDomReady(e) {
        if (document.addEventListener)
            document.addEventListener("DOMContentLoaded", function() {
                document.removeEventListener("DOMContentLoaded", arguments.callee, !1),
                    defaultProbeSource.starVGl.initDoFlag = !0,
                    e()
            }, !1),
                setTimeout(function() {
                    defaultProbeSource.starVGl.initDoFlag || probeInit()
                }, 3e3);
        else if (document.attachEvent && (document.attachEvent("onreadystatechange", function() {
            "complete" === document.readyState && (document.detachEvent("onreadystatechange", arguments.callee),
                e())
        }),
        document.documentElement.doScroll && void 0 === window.frameElement)) {
            try {
                document.documentElement.doScroll("left")
            } catch (e) {
                return setTimeout(arguments.callee, 20)
            }
            e()
        }
    }
    var probeIntervalTimeoutId = -1, _this;
    function probeInit() {
        defaultProbeSource.userInfo.USERID && (haiKanDataFormat.getFilterFlag() && ("CM" === defaultProbeSource.getOperator || "CT" === defaultProbeSource.getOperator || startPostSend(defaultProbeSource.getServerURL, "08", {
            flag: !0
        })),
        -1 !== probeIntervalTimeoutId && clearInterval(probeIntervalTimeoutId),
            probeIntervalTimeoutId = setInterval(function() {
                "LT" === defaultProbeSource.getOperator ? probeAssembleData.sendDataPost(defaultProbeSource.getServerURL, probeAssembleData.getData("00")) : probeAssembleData.sendDataPost(defaultProbeSource.getServerURL, probeAssembleData.getData("255"))
            }, 3e5))
    }
    function initHaiKanProbeData() {}
    haiKanDomReady(function() {
        setTimeout(function() {
            probeInit()
        }, 2e3)
    }),
        haiKanProbe = function(e) {
            (_this = this).hkSendPositionToServer = function(e, r) {
                if (e == defaultProbeSource.proBeType.TYPE6 || e == defaultProbeSource.proBeType.TYPE1 || e == defaultProbeSource.proBeType.TYPE2 || e == defaultProbeSource.proBeType.TYPE3 || e == defaultProbeSource.proBeType.TYPE4 || e == defaultProbeSource.proBeType.TYPE5 || e == defaultProbeSource.proBeType.TYPE7 || e == defaultProbeSource.proBeType.TYPE8 || e == defaultProbeSource.proBeType.TYPE15) {
                    var a, o, t, u = defaultProbeSource.getServerURL;
                    "CTjz3.0" === defaultProbeSource.getPlatformType ? (a = Utility.getValueByName("MACAddress") || Authentication.CTCGetConfig("MACAddress") || Authentication.CTCGetConfig("System.MACAddress"),
                        o = Utility.getValueByName("ntvuseraccount") || Authentication.CTCGetConfig("UserID"),
                        t = Utility.getValueByName("areaid") || Authentication.CTCGetConfig("areaid"),
                        defaultProbeSource.userInfo.STBMAC = r.STBMAC ? r.STBMAC : a,
                        defaultProbeSource.userInfo.USERID = r.userID ? r.userID : o,
                        defaultProbeSource.userInfo.AREAID = t) : (defaultProbeSource.userInfo.STBMAC = r.STBMAC ? r.STBMAC : window.hkiptv.getMac(),
                        defaultProbeSource.userInfo.USERID = r.userID ? r.userID : window.hkiptv.getUserid()),
                        startPostSend(u, e, r)
                } else if (!probeValueEmpty(probeProductInfo.getUserIDInfo().split("|")[2]))
                    try {
                        e == defaultProbeSource.proBeType.TYPE02 || e == defaultProbeSource.proBeType.TYPE04 || e == defaultProbeSource.proBeType.TYPE05 || e == defaultProbeSource.proBeType.TYPE06 || e == defaultProbeSource.proBeType.TYPE08 || e == defaultProbeSource.proBeType.TYPE10 || e == defaultProbeSource.proBeType.TYPE0S || e == defaultProbeSource.proBeType.TYPE16 ? (u = defaultProbeSource.getServerURL,
                            startPostSend(u, e, r)) : e == defaultProbeSource.proBeType.TYPE01 && "END" == r.STATUS ? (u = defaultProbeSource.getServerURL,
                            startPostSend(u, e, r, defaultProbeSource.starVGl.channel)) : e == defaultProbeSource.proBeType.TYPE01 && r.CHANNELNAME ? (defaultProbeSource.starVGl.channel.CHANNELNAME = decodeURIComponent(r.CHANNELNAME),
                            defaultProbeSource.starVGl.channel.CHANNELID = r.CHANNELID,
                            haiKanDataFormat.setCookie("STARV_TIMESHFTCID", defaultProbeSource.starVGl.channel.CHANNELID),
                            haiKanDataFormat.setCookie("STARV_TIMESHFTCNAME", defaultProbeSource.starVGl.channel.CHANNELNAME),
                            u = defaultProbeSource.getServerURL,
                            startPostSend(u, e, r, defaultProbeSource.starVGl.channel)) : e == defaultProbeSource.proBeType.TYPE03 && defaultProbeSource.starVGl.lookbackinfo.CHANNELID && defaultProbeSource.starVGl.lookbackinfo.PROGNAME ? (u = defaultProbeSource.getServerURL,
                            startPostSend(u, e, r, defaultProbeSource.starVGl.lookbackinfo)) : probeAssembleData.sendDataGet(defaultProbeSource.starVGl.infoUrl[e], e, r)
                    } catch (e) {}
            }
        }
        ,
        haiKanProbe.prototype = {
            constructor: haiKanProbe,
            sendPositionToServer: function(e, r) {
                _this.hkSendPositionToServer(e, r)
            }
        }
}();
